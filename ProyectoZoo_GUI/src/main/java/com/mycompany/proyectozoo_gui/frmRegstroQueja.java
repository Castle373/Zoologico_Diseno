package com.mycompany.proyectozoo_gui;

import Dominio.Continente;
import Dominio.Dias;
import Dominio.Horario;
import Dominio.Itinerario;
import Dominio.Queja;
import Dominio.Recorrido;
import Logica.FabricaLogica;
import Logica.ILogica;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author kuose
 */
public class frmRegstroQueja extends javax.swing.JFrame {
    ILogica logica;
    DefaultListModel<Itinerario> modeloListaItinerarios = new DefaultListModel<>();
    DefaultListModel<Recorrido> modeloListaRecorrido = new DefaultListModel<>();
    DefaultListModel<Horario> modeloListaHorario = new DefaultListModel<>();

    /**
     * Creates new form frmRegstroQueja
     */
    public frmRegstroQueja() {
        initComponents();
    }

    public frmRegstroQueja(List<Itinerario> itinerarios) {
        logica = FabricaLogica.crearInstancia();
        initComponents();
        tablaItinerario.setModel(modeloListaItinerarios);
        tablaItinerarioFecha.setModel(modeloListaRecorrido);
        tablaItinerarioFechaHora.setModel(modeloListaHorario);
        LlenarItinerarios(itinerarios);
    }

    public void LlenarItinerarios(List<Itinerario> itinerarios) {
        for (int i = 0; i < itinerarios.size(); i++) {
            modeloListaItinerarios.addElement(itinerarios.get(i));
        }
    }

    public void LlenarRecorridos(List<Recorrido> recorrido) {
        modeloListaRecorrido.removeAllElements();
        List<Dias> dias = new ArrayList<>();
        for (int i = 0; i < recorrido.size(); i++) {
            if (!dias.contains(recorrido.get(i).getHorario().getDia())) {
                modeloListaRecorrido.addElement(recorrido.get(i));
                dias.add(recorrido.get(i).getHorario().getDia());
            }

        }
    }

    public void LlenarHorarios(List<Recorrido> recorrido, Dias dia) {
        modeloListaHorario.removeAllElements();
        for (int i = 0; i < recorrido.size(); i++) {
            if (recorrido.get(i).getHorario().getDia().equals(dia)) {
                modeloListaHorario.addElement(recorrido.get(i).getHorario());
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaItinerario = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtNombreGuia = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaItinerarioFechaHora = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaItinerarioFecha = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botonEnviarQueja = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        botonRegresar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaItinerario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaItinerarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaItinerario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 121, 166));

        jLabel3.setText("Correo:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 164, -1));

        jLabel4.setText("Telefono:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 164, -1));

        jLabel5.setText("Escriba su queja");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        jLabel6.setText("Nombre (Opcional)");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, -1, -1));

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 164, -1));

        txtNombreGuia.setEditable(false);
        getContentPane().add(txtNombreGuia, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 124, -1));

        jScrollPane4.setViewportView(tablaItinerarioFechaHora);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, 121, 166));

        tablaItinerarioFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaItinerarioFechaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaItinerarioFecha);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 121, 166));

        jLabel9.setText("Fecha:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, -1, -1));

        jLabel10.setText("Hora:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, -1, -1));

        jLabel11.setText("Guia:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        botonEnviarQueja.setBackground(new java.awt.Color(153, 255, 153));
        botonEnviarQueja.setText("Enviar Queja");
        botonEnviarQueja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarQuejaActionPerformed(evt);
            }
        });
        getContentPane().add(botonEnviarQueja, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 530, -1, -1));

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtDescripcion);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 463, -1));

        jPanel2.setBackground(new java.awt.Color(0, 153, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Registrar Queja");

        botonRegresar.setBackground(new java.awt.Color(153, 255, 153));
        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(botonRegresar)
                .addGap(72, 72, 72)
                .addComponent(jLabel7)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(botonRegresar))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 90));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Seleccione el Itinerario que desea poner su queja");

        jLabel8.setText("Itinerario:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addContainerGap(432, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 620, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void botonEnviarQuejaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarQuejaActionPerformed
        if (!validarTelefono()) {
            JOptionPane.showMessageDialog(this,"Formato de Telefono Invalido");
           return;
        } 
        if (!validarCorreo()) {
            JOptionPane.showMessageDialog(this,"Formato de Correo Invalido");
           return;  
        }
        if (!validarCampos()) {
            return;
        }
        guardarQueja();
    }//GEN-LAST:event_botonEnviarQuejaActionPerformed

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
      frmPrincipalP f = new frmPrincipalP();
        f.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void tablaItinerarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaItinerarioMouseClicked

        Itinerario selectedValue = tablaItinerario.getSelectedValue();
        if (selectedValue != null) {
            LlenarRecorridos(selectedValue.getRecorridos());
            modeloListaHorario.removeAllElements();
        }


    }//GEN-LAST:event_tablaItinerarioMouseClicked

    private void tablaItinerarioFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaItinerarioFechaMouseClicked

        Itinerario selectedValue = tablaItinerario.getSelectedValue();
        Recorrido selectedValue2 = tablaItinerarioFecha.getSelectedValue();
        
        if (selectedValue != null&&selectedValue2!=null) {
            txtNombreGuia.setText(selectedValue2.getGuia().toString());
            LlenarHorarios(selectedValue.getRecorridos(), selectedValue2.getHorario().getDia());
//                modeloListaHorario.removeAllElements();  
        }

    }//GEN-LAST:event_tablaItinerarioFechaMouseClicked
    public void guardarQueja() {
        Itinerario itinerarioqueja = new Itinerario();
        Recorrido recorridoQueja = new Recorrido();
        Queja q = new Queja();
        q.setCorreoElectronico(txtCorreo.getText());
        q.setDescripcion(txtDescripcion.getText());
        q.setFecha(new Date());
        q.setTelefonoVisitante(txtTelefono.getText());
        for (int i = 0; i < modeloListaItinerarios.size(); i++) {
            Recorrido reco = tablaItinerarioFecha.getSelectedValue();
            Horario hora = tablaItinerarioFechaHora.getSelectedValue();
            if (modeloListaItinerarios.get(i).getRecorridos().contains(reco)) {
                if (reco.getHorario().equals(hora)) {
                    itinerarioqueja=modeloListaItinerarios.get(i);
                    recorridoQueja=reco;          
                }
            }
        }
        if (!txtNombre.getText().isEmpty()) {
           q.setNombreCompletoVisitante(txtNombre.getText());
        }else{
           q.setNombreCompletoVisitante("ANONYMUS");
        }
        for (int i = 0; i < itinerarioqueja.getRecorridos().size(); i++) {
            if (itinerarioqueja.getRecorridos().get(i).equals(recorridoQueja)) {
                System.out.println("Encontro 1");
                System.out.println(itinerarioqueja.getRecorridos().get(i).getQuejas().size());
                itinerarioqueja.getRecorridos().get(i).addQueja(q);
                System.out.println(itinerarioqueja.getRecorridos().get(i).getQuejas().size());
            }
            
        }

        if (logica.actualizarItinerario(itinerarioqueja)) {
            JOptionPane.showMessageDialog(this, "Registro de Queja Exitoso");
            frmPrincipalP f = new frmPrincipalP();
        f.setVisible(true);
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "No se pudo Agregar La queja");
        }
        
    }
    public boolean validarCampos(){
        if (tablaItinerarioFechaHora.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "No se A selecionado una hora");
            return false;  
        }
        if (txtDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Escribe una Descripcio de tu queja");
            return false;
        }
        return true;
    }
    public boolean validarTelefono() {
        CharSequence cadena = txtTelefono.getText();
        Pattern pattern = Pattern.compile("^\\((\\d{3})\\)-?(\\d{3})-?(\\d{4})$|^\\((\\d{3})\\)(\\d{7})$|^\\d{10}$");
        Matcher matcher = pattern.matcher(cadena);
        return matcher.matches();
    }
    public boolean validarCorreo(){
        CharSequence cadena = txtCorreo.getText();
        Pattern pattern = Pattern.compile("^([\\w.-]{1,20})@[a-zA-Z0-9.-]{1,20}$");
        Matcher matcher = pattern.matcher(cadena);
        return matcher.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRegstroQueja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRegstroQueja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRegstroQueja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRegstroQueja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRegstroQueja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEnviarQueja;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<Itinerario> tablaItinerario;
    private javax.swing.JList<Recorrido> tablaItinerarioFecha;
    private javax.swing.JList<Horario> tablaItinerarioFechaHora;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreGuia;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
